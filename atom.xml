<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[OSv Blog]]></title>
  <link href="http://blog.osv.io//github/atom.xml" rel="self"/>
  <link href="http://blog.osv.io//github/"/>
  <updated>2014-04-14T09:08:40-07:00</updated>
  <id>http://blog.osv.io//github/</id>
  <author>
    <name><![CDATA[Cloudius Systems]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OSv Alpha Release: 0.06]]></title>
    <link href="http://blog.osv.io//github/blog/2014/04/06/alpha/"/>
    <updated>2014-04-06T21:00:00-07:00</updated>
    <id>http://blog.osv.io//github/blog/2014/04/06/alpha</id>
    <content type="html"><![CDATA[<p>The OSv “Val Thorens” 0.06 release is the first of a series of alpha releases.  OSv is a new lightweight OS, designed from the ground up to run in a virtual cloud environment, with maximum performance, low latency, and simple management.</p>

<p>The release notes are available on the OSv wiki: <a href="https://github.com/cloudius-systems/osv/wiki/OSv-release-0.06">OSv Release 0.06</a></p>

<p>The major new features and improvements in this release are:</p>

<h2>Cloud platform and hypervisor support</h2>

<p>New with this release is experimental support for VirtualBox, VMWare, and Google Compute Engine.  OSv also support QEMU/KVM, Xen, and Amazon EC2.</p>

<h2>Capstan</h2>

<p>Capstan is a tool for rapidly building and running your application on OSv. Capstan is as simple and fast as using Docker for creating containers, but the result is a complete virtual machine image that will run on any hypervisor with OSv support. A typical Capstan image is very lightweight: only 12-20MB larger than your application itself!</p>

<h2>REST API</h2>

<p>The new REST API for OSv On a cloud environment of multiple instances, interacting with each instance via GUI or CLI is non efficient. Instead OS operations should allows easy automation. The new REST API for OSv will allow such remote automation.</p>

<p>In this release we expose the first (small) set of REST APIs, with many more to follow.
Swagger[1] is used to define the REST specification, allowing easy development of client applications and providing  interactive documentation.
The REST API includes the following parts:
Native HTTP server
Built-in tool for Swagger API compilation
UI page for interacting with the API
For more on using the API, see [2]
With the availability of the REST API and the Swagger-UI, we are deprecating the old JRuby base UI.</p>

<p>[1] <a href="http://developers.helloreverb.com/swagger/">http://developers.helloreverb.com/swagger/</a>
[2] <a href="https://github.com/cloudius-systems/mgmt/wiki/OSv-REST-API">https://github.com/cloudius-systems/mgmt/wiki/OSv-REST-API</a></p>

<p>Hypervisor Enablement
In this release, we are introducing an experimental support for three additional platforms:
Google Compute Engine (GCE)
OSv is now functional on GCE, including support for key-pair.
For more on how to run OSv on GCE
<a href="https://github.com/cloudius-systems/osv/wiki/Run-OSv-on-Google-Compute-Engine">https://github.com/cloudius-systems/osv/wiki/Run-OSv-on-Google-Compute-Engine</a>
VIrtualBox
OSv is now functional on VirtualBox, bringing OSv images for the first time to developers on Mac and WIndows machines.<br/>
You can use either download as a ready to use OVF file, or even easier, use Capstan to run VirtualBox for you.
For more on how to run OSv with VirtualBox <a href="https://github.com/cloudius-systems/osv/wiki/Run-OSv-on-VirtualBox">https://github.com/cloudius-systems/osv/wiki/Run-OSv-on-VirtualBox</a>
VMWare
OSv is now functional on VMWare Player/Workstation/Fusion and VMware ESXi
For more information on running OSv on VMWare:
<a href="https://github.com/cloudius-systems/osv/wiki/Running-OSv-on-VMware-">https://github.com/cloudius-systems/osv/wiki/Running-OSv-on-VMware-</a>(Player,-Workstation,-Fusion)
<a href="https://github.com/cloudius-systems/osv/wiki/Running-OSv-on-VMware-ESXi">https://github.com/cloudius-systems/osv/wiki/Running-OSv-on-VMware-ESXi</a>
EC2
OSv is enabled on EC2 for some time now. In this release it became functional on a micro instance as well, making OSv available on ALL EC2 instance types.</p>

<p>Porting to other architectures
The AArch64 Port of OSv has been started, initially targeting the QEMU Mach-virt platform, running on the ARM Foundation Model v8.
More on ARM port here
<a href="https://github.com/cloudius-systems/osv/wiki/AArch64">https://github.com/cloudius-systems/osv/wiki/AArch64</a></p>

<p>Driver Enablement
We continue to add more driver alternatives to OSv.
The latest additions are:
Advanced Host Controller Interface (AHCI) SATA block driver
VMW Virtual Network Adaptor (VMXNET3)</p>

<p>For More infro on HD controller support: <a href="https://github.com/cloudius-systems/osv/wiki/Supported-Drivers">https://github.com/cloudius-systems/osv/wiki/Supported-Drivers</a></p>

<p>Net Channels
Envisioned by Van Jacobson in 2006, the net channels design radically changes the way an OS handles TCP/IP, in order to take advantage of modern multicore architectures.
The idea, in short, is moving most of the packet processing logic from the kernel to the application context. A minimal packet classifier feeds packet directly to the application socket over “channels”.
The net channel design reduces cache contention and lock contention. In the long term, we expect Net Channels to outperform general OS implementations.
The original presention by Van Jacobson: <a href="http://www.lemis.com/grog/Documentation/vj/lca06vj.pdf">http://www.lemis.com/grog/Documentation/vj/lca06vj.pdf</a></p>

<p>JVM Balloon
One of the problem with working with the JVM, is that it forces you to set the heap size in advance.
Choose too little and you are hurting your Java app performance.
Choose too much and you are wasting OS resources.
The JVM balloon solves this problem by dynamically exchanging memory between the JVM and OSv, eliminating the need for this manual tuning exercise.
More on JVM Balloon [TBD]</p>

<p>ZFS ARC
Added support to allow read-only direct use of ARC buffers on memory mappings, thus avoiding duplication of file data. Write support to ARC buffers is planned. Therefore, writes on file-backed mappings still require the Copy-on-write (COW) approach.</p>

<p>Appliances
We are constantly looking to improve the usability and performance of OSv base appliances.
In this release, we introduce a new, written from scratch, prototype implementation of memcached.
Although still in early phase, and not fully functional yet, it already outperforms memcached on Linux by almost 100%!
More on memcached prototype and benchmark
<a href="https://github.com/cloudius-systems/osv/wiki/OSv-Case-Study:-Memcached">https://github.com/cloudius-systems/osv/wiki/OSv-Case-Study:-Memcached</a>
Known issues
For complete list of open issues see
<a href="https://github.com/cloudius-systems/osv/search?q=state%3Aopen&amp;type=Issues">https://github.com/cloudius-systems/osv/search?q=state%3Aopen&amp;type=Issues</a></p>

<p>Full list of contributions
To be update on actual tag</p>

<p>A <a href="http://blog.osv.io//github/atom.xml">feed</a> is available, so please subscribe in your RSS reader for updates, or, if you prefer to use Twitter, you can follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> there.</p>

<p>We&rsquo;re running <a href="http://octopress.org/docs/blogging/">Octopress</a> on <a href="http://pages.github.com/">GitHub Pages</a>, so that we can use the same easy Git contribution process for the blog as for our code.</p>

<p>Watch for a simple introduction to the <a href="https://github.com/cloudius-systems/capstan">Capstan</a> devops tool, coming this week.</p>

<p>If you have any questions about the blog, you can post a comment here, or mail <a href="mailto:dmarti@cloudius-systems.com">Don Marti</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's So Great About Small Images?]]></title>
    <link href="http://blog.osv.io//github/blog/2014/04/03/small-image/"/>
    <updated>2014-04-03T08:37:05-07:00</updated>
    <id>http://blog.osv.io//github/blog/2014/04/03/small-image</id>
    <content type="html"><![CDATA[<p>Willpower is a muscle.</p>

<p>You know that you&rsquo;re in for a long wait, as you pull
down the new release.</p>

<p>If you&rsquo;re at the office, and you were going to get coffee anyway while you get a new virtual appliance to try out, maybe it&rsquo;s not so bad.</p>

<p>But what if you have a bunch of VMs to deploy?  Or you just made a little change, and have to wait for the continuous integration system to</p>

<p>It&rsquo;s like&hellip;well, any comparison I would make here would go back to the days of 28.8k modems, so get off my lawn.</p>

<h2>Demos</h2>

<p>Tom Bihn <a href="http://www.hauteamericana.com/0c7f3e5w1x3e7jxh4gwuu01tal93yx/2014/3/10/lwsq1keg5444f9agz5sc6zaak5ygbx">said it best</a>.  &ldquo;The weight of a person&rsquo;s bag is usually inversely proportional to the fun they are having.&rdquo;  I like my laptop</p>

<p>If you have any Capstan questions, please join the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing list on Google Groups</a>.  You can get updates on new OSv and Capstan progress by subscribing to this blog or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Simple Capstan Example]]></title>
    <link href="http://blog.osv.io//github/blog/2014/04/03/capstan/"/>
    <updated>2014-04-03T08:37:05-07:00</updated>
    <id>http://blog.osv.io//github/blog/2014/04/03/capstan</id>
    <content type="html"><![CDATA[<p>(Updated 14 April 2014: Add new URL for osv-base image.)</p>

<p><a href="https://github.com/cloudius-systems/capstan">Capstan</a> is a new tool for building <a href="http://osv.io/">OSv</a> virtual machine images.  If you have worked with other tools for making VMs, you&rsquo;ll find that Capstan is really simple.  It&rsquo;s a lot like <a href="http://www.docker.io/">Docker</a> actually&mdash;only you get a complete VM out of it and not just a container.</p>

<p>You&rsquo;re probably used to blogs from sneaky tech evangelists who claim that something is simple and then post some <a href="http://drusepth.net/how-to-speed-up-your-computer-using-google-drive-as-extra-ram/">complicated set of instructions</a>.  So just to keep your finger off the close button, here&rsquo;s all you need to do.</p>

<ul>
<li><p>Add a Make target to build your application as a shared object.</p></li>
<li><p>Write a short Capstanfile.  (8 lines not counting comments).</p></li>
<li><p>Run Capstan.</p></li>
</ul>


<p>That&rsquo;s all there is to it.  Finger off the close button now?  Good.  Ready?</p>

<!-- more -->


<p>Let&rsquo;s make a VM that does something useful, say, serve this article to the entire Internet.  Go ahead and <code>git clone</code> <a href="https://github.com/cloudius-systems/capstan">Capstan</a> and follow along.</p>

<h2>An easy example, plus Makefile work</h2>

<p>Just to keep it simple, let&rsquo;s borrow the short HTTP server example from <a href="http://libevent.org/">libevent</a>.  The libevent project is a wrapper for convenient event-driven programming, and the library is used in high-profile projects such as <a href="https://www.torproject.org/">Tor</a>, the anonymous communications system, and <a href="http://www.chromium.org/Home">Chromium</a>, the basis for the Google Chrome web browser.</p>

<p>Best of all, libevent includes an easy-to-use HTTP implementation and sample code for using it.  So I&rsquo;ll copy their web server sample code, tweak it a little to make the web server I need, and set up a simple Makefile.</p>

<p>Those steps are all done in the code for this article, which is at <a href="https://github.com/dmarti/http-server">dmarti/http-server</a>.</p>

<p>You&rsquo;ll need the development package for libevent installed.  On my system, it&rsquo;s called <code>libevent-devel</code>.</p>

<p>Here&rsquo;s the target to pay attention to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http-server.so : http-server.c
</span><span class='line'>        $(CC) -o $@ -std=gnu99 -fPIC -shared -levent $``</span></code></pre></td></tr></table></div></figure>


<p>Yes, that&rsquo;s right, we&rsquo;re using <code>-fPIC</code> (position independent code) and <code>-shared</code> (passed to the linker, make it build a shared library).  And <code>http-server.c</code> has a function called <code>main</code>.  What&rsquo;s going on?  This is because of the way OSv works.  Your application on OSv isn&rsquo;t a conventional ELF executable, but a .so file.</p>

<p>Besides building the actual HTTP server, I&rsquo;ll also put in a Make target to create the HTML version of this article from the README, <a href="https://lwn.net/Articles/589196/">because I can</a>.  So I type <code>make</code> to build the web content and the web server.</p>

<p>Of course you can expand on this to build as complicated of an application and data set as you want.  This is just an example to show you Capstan for now.</p>

<h2>Step two: Add a Capstanfile</h2>

<p>Now it&rsquo;s time to tell Capstan how to create the virtual machine image.  Building it is easy&mdash;just run <code>make</code>&mdash;so there&rsquo;s the <code>build</code> section right there.  Now we need to tell Capstan what files go into the image, so we populate the <code>files</code> section with the name of our web server (http-server.so) the libevent shared library, and some web content&mdash;just the HTML version of this article, plus a favicon.ico file.  (For now I&rsquo;m just copying my development systems&rsquo;s copy of libevent into the image.  For real use, I&rsquo;ll come up with a more consistent way to keep track of build artifacts like this, probably borrowing them from some helpful Linux distribution.  Yes, OSv can use libraries built on and for your 64-bit Linux box.)</p>

<p>Easy so far.  Now for the <code>cmdline</code> option, which is like <a href="http://docs.docker.io/en/v0.6.3/use/builder/#cmd">Docker&rsquo;s CMD</a>: the command that gets run when the image starts.  The HTTP server just takes its DocumentRoot entry from the command line, so the command comes out as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cmdline: /tools/http-server.so /www</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s one more section in the Capstanfile: <code>base</code>.  That&rsquo;s a pre-built OSv image, which is available from Amazon S3.  Capstan will automatically download this for you.  It lives under <code>.capstan</code> in your home directory.</p>

<h2>Putting it all together</h2>

<p>Now, when we type <code>capstan build</code>, Capstan invokes <code>make</code>, then creates the VM image.  It lives under <code>.capstan</code> in your home directory, at:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.capstan/repository/http-server/http-server.qemu</span></code></pre></td></tr></table></div></figure>


<p>This is a QCOW2 image, ready to run under KVM or convert to your favorite format.  That&rsquo;s it.  Told you it was simple.  You can just do <code>capstan run</code> and point your browser to <a href="http://localhost:8080/">http://localhost:8080/</a> to see the site.</p>

<p>In an upcoming blog post, I&rsquo;ll cover the recently added VirtualBox support in Capstan (hint: try <code>-p vbox</code>) and some other fun things you can do.</p>

<p>If you have any Capstan questions, please join the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing list on Google Groups</a>.  You can get updates on new OSv and Capstan progress by subscribing to this blog or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New OSv Blog]]></title>
    <link href="http://blog.osv.io//github/blog/2014/03/30/welcome/"/>
    <updated>2014-03-30T20:54:23-07:00</updated>
    <id>http://blog.osv.io//github/blog/2014/03/30/welcome</id>
    <content type="html"><![CDATA[<p>Welcome to the OSv blog.</p>

<p>A <a href="http://blog.osv.io//github/atom.xml">feed</a> is available, so please subscribe in your RSS reader for updates, or, if you prefer to use Twitter, you can follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> there.</p>

<p>We&rsquo;re running <a href="http://octopress.org/docs/blogging/">Octopress</a> on <a href="http://pages.github.com/">GitHub Pages</a>, so that we can use the same easy Git contribution process for the blog as for our code.</p>

<p>Watch for a simple introduction to the <a href="https://github.com/cloudius-systems/capstan">Capstan</a> devops tool, coming this week.</p>

<p>If you have any questions about the blog, you can post a comment here, or mail <a href="mailto:dmarti@cloudius-systems.com">Don Marti</a>.</p>
]]></content>
  </entry>
  
</feed>
